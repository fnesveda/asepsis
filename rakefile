BUILD_TOOL = ENV["tool"] || 'xcodebuild' # 'xctool'
BUILD_TOOL_POSTFIX = ENV["toolpostfix"] || unless `which xcpretty`.empty? then '| xcpretty -c; exit ${PIPESTATUS[0]}' end

ROOT_DIR = File.expand_path('.')
BIN_DIR = File.join(ROOT_DIR, 'bin')
RELEASE_DIR = File.join(ROOT_DIR, 'releases')

INSTALL_DIR = "/Library/Application Support/Asepsis"



################################################################################################
# dependencies

require 'rubygems'
begin
    require 'colored'
rescue LoadError
    raise 'You must "gem install colored" to use terminal colors'
end

############################################################################################

def die(msg, status=1)
  puts "Error[#{status||$?}]: #{msg}".red
  exit status||$?
end

def announce(cmd)
    puts "> " + cmd.yellow
end

def sys(cmd)
    announce(cmd)
    system(cmd)
end

############################################################################################

desc "build"
task :build do
    sys("#{BUILD_TOOL} -project Asepsis.xcodeproj -scheme build -configuration Release #{BUILD_TOOL_POSTFIX}")
    die("build failed") unless $?==0
end

desc "build debug version (more verbose in Console.app)"
task :build_debug do
    sys("#{BUILD_TOOL} -project Asepsis.xcodeproj -scheme build -configuration Debug #{BUILD_TOOL_POSTFIX}")
    die("build failed") unless $?==0
end

desc "install"
task :install do
    sys("sudo rm -rf \"#{INSTALL_DIR}\"")
    sys("sudo cp -r \"#{BIN_DIR}/Asepsis/\" \"#{INSTALL_DIR}\"")
    sys("\"#{INSTALL_DIR}/ctl/asepsisctl\" install")
end

desc "clean"
task :clean do
    sys("rm -rf \"#{BIN_DIR}\"")
    sys(BUILD_TOOL+' clean -project Asepsis.xcodeproj -scheme build')
    die("clean failed") unless $?==0
end

task :default => :build